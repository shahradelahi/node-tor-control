"gh pr checkout 13{";
  "image"; "mcr.microsoft.com/devcontainers/universal:2",
  "features": {
  }
}FROM mcr.microsoft.com/devcontainers/cpp:1-${templateOption:imageVariant}

ARG REINSTALL_CMAKE_VERSION_FROM_SOURCE="${templateOption:reinstallCmakeVersionFromSource}"

# Optionally install the cmake for vcpkg
COPY ./reinstall-cmake.sh /tmp/

RUN if [ "${REINSTALL_CMAKE_VERSION_FROM_SOURCE}" != "none" ]; then \
        chmod +x /tmp/reinstall-cmake.sh && /tmp/reinstall-cmake.sh ${REINSTALL_CMAKE_VERSION_FROM_SOURCE}; \
    fi \
    && rm -f /tmp/reinstall-cmake.sh

# [Optional] Uncomment this section to install additional vcpkg ports.
# RUN su vscode -c "${VCPKG_ROOT}/vcpkg install <your-port-name-here>"

# [Optional] Uncomment this section to install additional packages.
# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
#     && apt-get -y install --no-install-recommends <your-package-list-here>mcr.microsoft.com/devcontainers/cpp:1-${templateOption:imageVariantecho foo='bar"runArgs": ["--device-cgroup-rule='my rule here'"]FROM mcr.microsoft.com/devcontainers/cpp:1-${templateOption:imageVariant}

ARG REINSTALL_CMAKE_VERSION_FROM_SOURCE="${templateOption:reinstallCmakeVersionFromSource}"

# Optionally install the cmake for vcpkg
COPY ./reinstall-cmake.sh /tmp/

RUN if [ "${REINSTALL_CMAKE_VERSION_FROM_SOURCE}" != "none" ]; then \
        chmod +x /tmp/reinstall-cmake.sh && /tmp/reinstall-cmake.sh ${REINSTALL_CMAKE_VERSION_FROM_SOURCE}; \
    fi \
    && rm -f /tmp/reinstall-cmake.sh

# [Optional] Uncomment this section to install additional vcpkg ports.
# RUN su vscode -c "${VCPKG_ROOT}/vcpkg install <your-port-name-here>"

# [Optional] Uncomment this section to install additional packages.
# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
#     && apt-get -y install --no-install-recommends <your-package-list-here>"runArgs": ["--device-cgroup-rule=my rule here"]13-cmake.sh"postAttachCommand": "echo foo='bar'"gh pr checkout 13echo foo='bar
{
    "name": "my-project-devcontainer",
    "image": "mcr.microsoft.com/devcontainers/base:ubuntu",  // Any generic, debian-based image.
    "features": {
        "ghcr.io/devcontainers/features/go:1": {
            "version": "1.18"
        },
        "ghcr.io/devcontainers/features/docker-in-docker:1": {
            "version": "latest",
            "moby": true
        }
    }
}
